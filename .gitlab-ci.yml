stages:
  - format
  - lint
  - test
  - coverage
  - build
  - bench
  - doc

test:lint:rustfmt:
  stage: format
  image: "guangie88/rustfmt-clippy:stable"
  script:
    - cargo fmt --all -- --check
  tags:
    - linux
  allow_failure: true
  when: always
    
test:lint:clippy:
  stage: lint
  image: "guangie88/rustfmt-clippy:stable"
  script:
    - cargo clippy -- -D warnings
  tags:
    - linux
  allow_failure: true
  needs: ["test:lint:rustfmt"]

    
test:test:linux:
  stage: test
  image: "guangie88/rustfmt-clippy:stable"
  script:
    - rustc --version
    - cargo --version
    - cargo install cargo-junit
    - cargo junit --name linux.xml
  cache:
    key: "$CI_COMMIT_REF_SLUG-test"
    paths:
      - ~/.cargo
      - target
  tags:
    - linux
  needs: ["test:lint:rustfmt"]
  artifacts:
    paths:
      - linux.xml
    reports:
      junit: linux.xml

test:test:windows:
  stage: test
  script:
    - cargo --version
    - rustc --version
    - cargo test
  tags:
    - windows-own
  needs: ["test:lint:rustfmt"]
  only:
    - master
    - tags

test:test:macos:
  stage: test
  script:
    - cargo --version
    - rustc --version
    - cargo test
  tags:
    - macos
  needs: ["test:lint:rustfmt"]
  only:
    - master
    - tags
    
test:coverage:
  stage: coverage
  image: "xd009642/tarpaulin"
  script:
    - apt-get update
    - apt-get install curl git -y
    - cargo tarpaulin --out Xml -t 600 --ignore-tests --force-clean --output-dir tarp
  after_script:
    - bash <(curl -s https://codecov.io/bash) -f tarp/cobertura.xml
  tags:
    - linux-own
  allow_failure: true
  needs: ["test:lint:rustfmt"]

build:build:linux:
  stage: build
  image: "guangie88/rustfmt-clippy:stable"
  script:
    - cargo build --release
  artifacts:
    paths:
      - target/release/
  cache:
    key: "$CI_COMMIT_REF_SLUG-build"
    paths:
      - ~/.cargo
      - target
  tags:
    - linux
  needs: ["test:test:linux"]
  only:
    - master
    - tags

build:build:windows:
  stage: build
  script:
    - cargo --version
    - rustc --version
    - cargo build --release
  artifacts:
    paths:
      - target/release/
  tags:
    - windows-own
  needs: ["test:test:windows"]
  only:
    - master
    - tags

build:build:macos:
  stage: build
  script:
    - cargo --version
    - rustc --version
    - cargo build --release
  artifacts:
    paths:
      - target/release/
  tags:
    - macos
  needs: ["test:test:macos"]
  only:
    - master
    - tags
    
build:bench:linux:
  stage: bench
  image: "guangie88/rustfmt-clippy:stable"
  variables:
    RUSTFLAGS: "-C target-cpu=native"
  script:
    - cargo bench
  cache:
    key: "$CI_COMMIT_REF_SLUG-bench"
    paths:
      - ~/.cargo
      - target
  tags:
    - linux
  needs: ["test:lint:rustfmt"]
  only:
    - master
    - tags

build:bench:windows:
  stage: bench
  variables:
    RUSTFLAGS: "-C target-cpu=native"
  script:
    - cargo --version
    - rustc --version
    - cargo bench
  cache:
    key: "$CI_COMMIT_REF_SLUG-bench"
    paths:
      - target
  tags:
    - windows-own
  needs: ["test:lint:rustfmt"]
  only:
    - master
    - tags

build:bench:macos:
  stage: bench
  variables:
    RUSTFLAGS: "-C target-cpu=native"
  script:
    - cargo --version
    - rustc --version
    - cargo bench
  cache:
    key: "$CI_COMMIT_REF_SLUG-bench-macos"
    paths:
      - target
  tags:
    - macos
  needs: ["build:build:macos"]
  only:
    - master
    - tags
    
pages:
  stage: doc
  image: "guangie88/rustfmt-clippy:stable"
  script:
    - cargo doc --no-deps --document-private-items
    - mv target/doc public
    - echo '<meta http-equiv="refresh" content="0; url=asuran">' > public/index.html
  artifacts:
    paths:
      - public
      - target
  needs: ["test:lint:rustfmt"]
  tags:
    - linux
  when: always
